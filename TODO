- filter (where) -> incl. 'like'
- get_fields?
- (order_by) then_by?
- get_distinct
- join (left)
- offset

- extract endpoint for raw sql query => db.run_query(sql, params, *args, **kwargs)?
- use <, >, !=, 'like' in where clauses
- support filter by nested object fields -> book's author's name
- add ManyToOne, ManyToMany

-----------------------------
# TODO: refactor with cursor.close()
# cursor = self.conn.cursor()
# try:
#     cursor.execute(table._get_create_sql())
#     self.conn.commit()
# finally:
#     cursor.close()

or context manager for conn?

----------------------------

- should we use 'select {fields}' instead of 'select *'?
- remove 'filter'
- add datetime types?
